;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [1648 1665])
            ("ring" include nil nil [1666 1681])
            ("time-date" include nil nil [1682 1702])
            ("rcirc" customgroup (:user-visible-flag t) nil [1704 1842])
            ("rcirc-server-alist" variable (:default-value (quote (("irc.freenode.net" :channels ("#rcirc"))))) nil [1844 3614])
            ("rcirc-default-port" variable (:default-value 6667) nil [3616 3720])
            ("rcirc-default-nick" variable (:default-value (user-login-name)) nil [3722 3817])
            ("rcirc-default-user-name" variable (:default-value "user") nil [3819 4006])
            ("rcirc-default-full-name" variable (:default-value "unknown") nil [4008 4197])
            ("rcirc-fill-flag" variable (:default-value t) nil [4199 4326])
            ("rcirc-fill-column" variable nil nil [4328 4803])
            ("rcirc-fill-prefix" variable nil nil [4805 5049])
            ("rcirc-ignore-buffer-activity-flag" variable nil nil [5051 5145])
            ("make-variable-buffer-local" code nil nil [5146 5209])
            ("rcirc-low-priority-flag" variable nil nil [5211 5315])
            ("make-variable-buffer-local" code nil nil [5316 5369])
            ("rcirc-omit-mode" variable nil nil [5371 5501])
            ("make-variable-buffer-local" code nil nil [5502 5547])
            ("rcirc-time-format" variable (:default-value "%H:%M ") nil [5549 5708])
            ("rcirc-input-ring-size" variable (:default-value 1024) nil [5710 5813])
            ("rcirc-read-only-flag" variable (:default-value t) nil [5815 5936])
            ("rcirc-buffer-maximum-lines" variable nil nil [5938 6250])
            ("rcirc-scroll-show-maximum-output" variable (:default-value t) nil [6252 6408])
            ("rcirc-authinfo" variable nil nil [6410 7845])
            ("rcirc-auto-authenticate-flag" variable (:default-value t) nil [7847 8019])
            ("rcirc-authenticate-before-join" variable (:default-value t) nil [8021 8237])
            ("rcirc-prompt" variable (:default-value "> ") nil [8239 8636])
            ("rcirc-keywords" variable nil nil [8638 8760])
            ("rcirc-ignore-list" variable nil nil [8762 8930])
            ("rcirc-ignore-list-automatic" variable nil nil [8932 9193])
            ("rcirc-bright-nicks" variable nil nil [9195 9336])
            ("rcirc-dim-nicks" variable nil nil [9338 9475])
            ("define-obsolete-variable-alias" code nil nil [9477 9560])
            ("rcirc-print-functions" variable nil nil [9561 9733])
            ("rcirc-authenticated-hook" variable nil nil [9735 9819])
            ("rcirc-always-use-server-buffer-flag" variable nil nil [9821 9987])
            ("rcirc-decode-coding-system" variable (:default-value (quote utf-8)) nil [9989 10212])
            ("rcirc-encode-coding-system" variable (:default-value (quote utf-8)) nil [10214 10354])
            ("rcirc-coding-system-alist" variable nil nil [10356 11257])
            ("rcirc-multiline-major-mode" variable (:default-value (quote fundamental-mode)) nil [11259 11407])
            ("rcirc-nick-completion-format" variable (:default-value "%s: ") nil [11409 11726])
            ("rcirc-kill-channel-buffers" variable nil nil [11728 11974])
            ("rcirc-nick" variable nil nil [11976 11999])
            ("rcirc-prompt-start-marker" variable nil nil [12001 12039])
            ("rcirc-prompt-end-marker" variable nil nil [12040 12076])
            ("rcirc-nick-table" variable nil nil [12078 12107])
            ("rcirc-recent-quit-alist" variable nil nil [12109 12211])
            ("rcirc-nick-syntax-table" variable (:default-value (let ((table (make-syntax-table text-mode-syntax-table))) (mapc (lambda (c) (modify-syntax-entry c "w" table)) "[]\\`_^{|}-") (modify-syntax-entry 39 "_" table) table)) nil [12213 12511])
            ("rcirc-buffer-alist" variable nil nil [12569 12600])
            ("rcirc-activity" variable nil nil [12602 12673])
            ("rcirc-activity-string" variable nil nil [12675 12773])
            ("put" code nil nil [12774 12826])
            ("rcirc-server-buffer" variable nil nil [12828 12919])
            ("rcirc-target" variable nil nil [12921 12999])
            ("rcirc-urls" variable nil nil [13001 13095])
            ("put" code nil nil [13096 13132])
            ("rcirc-timeout-seconds" variable (:default-value 600) nil [13134 13237])
            ("rcirc-id-string" variable
               (:constant-flag t
                :default-value (concat "rcirc on GNU Emacs " emacs-version))
                nil [13239 13310])
            ("rcirc-startup-channels" variable nil nil [13313 13348])
            ("rcirc-server-name-history" variable nil nil [13350 13429])
            ("rcirc-server-port-history" variable nil nil [13431 13510])
            ("rcirc-nick-name-history" variable nil nil [13512 13589])
            ("rcirc-user-name-history" variable nil nil [13591 13668])
            ("rcirc" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [13685 16759])
            ("defalias" code nil nil [16776 16798])
            ("rcirc-process-output" variable nil nil [16802 16835])
            ("rcirc-topic" variable nil nil [16836 16860])
            ("rcirc-keepalive-timer" variable nil nil [16861 16895])
            ("rcirc-last-server-message-time" variable nil nil [16896 16939])
            ("rcirc-server" variable nil nil [16940 16965])
            ("rcirc-server-name" variable nil nil [16995 17025])
            ("rcirc-timeout-timer" variable nil nil [17063 17095])
            ("rcirc-user-authenticated" variable nil nil [17096 17133])
            ("rcirc-user-disconnect" variable nil nil [17134 17168])
            ("rcirc-connecting" variable nil nil [17169 17198])
            ("rcirc-connection-info" variable nil nil [17199 17233])
            ("rcirc-process" variable nil nil [17234 17260])
            ("rcirc-connect" function (:arguments ("server" "port" "nick" "user-name" "full-name" "startup-channels" "password" "encryption")) nil [17277 19713])
            ("with-rcirc-process-buffer" function (:arguments ("process" "body")) nil [19715 19868])
            ("with-rcirc-server-buffer" function (:arguments ("body")) nil [19870 20008])
            ("defalias" code nil nil [20010 20103])
            ("rcirc-prompt-for-encryption" function (:arguments ("server-plist")) nil [20105 20549])
            ("rcirc-keepalive" function nil nil [20551 21243])
            ("rcirc-handler-ctcp-KEEPALIVE" function (:arguments ("process" "_target" "_sender" "message")) nil [21245 21457])
            ("rcirc-debug-buffer" variable (:default-value "*rcirc debug*") nil [21459 21502])
            ("rcirc-debug-flag" variable nil nil [21503 21591])
            ("rcirc-debug" function (:arguments ("process" "text")) nil [21592 22018])
            ("define-obsolete-variable-alias" code nil nil [22020 22109])
            ("rcirc-sentinel-functions" variable nil nil [22110 22268])
            ("rcirc-reconnect-delay" variable nil nil [22270 22451])
            ("rcirc-last-connect-time" variable nil nil [22453 22533])
            ("rcirc-sentinel" function (:arguments ("process" "sentinel")) nil [22535 23627])
            ("rcirc-disconnect-buffer" function (:arguments ("buffer")) nil [23629 23904])
            ("rcirc-process-list" function nil nil [23906 24231])
            ("define-obsolete-variable-alias" code nil nil [24233 24336])
            ("rcirc-receive-message-functions" variable nil nil [24337 24509])
            ("rcirc-filter" function (:arguments ("process" "output")) nil [24510 25106])
            ("rcirc-reschedule-timeout" function (:arguments ("process")) nil [25108 25449])
            ("rcirc-delete-process" function (:arguments ("process")) nil [25451 25516])
            ("rcirc-trap-errors-flag" variable (:default-value t) nil [25518 25551])
            ("rcirc-process-server-response" function (:arguments ("process" "text")) nil [25552 25890])
            ("rcirc-process-server-response-1" function (:arguments ("process" "text")) nil [25892 26799])
            ("rcirc-responses-no-activity" variable (:default-value (quote ("305" "306"))) nil [26801 26922])
            ("rcirc-handler-generic" function (:arguments ("process" "response" "sender" "args" "_text")) nil [26924 27183])
            ("rcirc--connection-open-p" function (:arguments ("process")) nil [27185 27273])
            ("rcirc-send-string" function (:arguments ("process" "string")) nil [27275 27684])
            ("rcirc-send-privmsg" function (:arguments ("process" "target" "string")) nil [27686 27806])
            ("rcirc-send-ctcp" function (:arguments ("process" "target" "request" "args")) nil [27808 28020])
            ("rcirc-buffer-process" function (:arguments ("buffer")) nil [28022 28369])
            ("rcirc-server-name" function (:arguments ("process")) nil [28371 28583])
            ("rcirc-nick" function (:arguments ("process")) nil [28585 28715])
            ("rcirc-buffer-nick" function (:arguments ("buffer")) nil [28717 29006])
            ("rcirc-max-message-length" variable (:default-value 420) nil [29008 29096])
            ("rcirc-split-message" function (:arguments ("message")) nil [29098 29804])
            ("rcirc-send-message" function (:arguments ("process" "target" "message" "noticep" "silent")) nil [29806 30379])
            ("rcirc-input-ring" variable nil nil [30381 30410])
            ("rcirc-input-ring-index" variable nil nil [30411 30444])
            ("rcirc-prev-input-string" function (:arguments ("arg")) nil [30446 30544])
            ("rcirc-insert-prev-input" function nil nil [30546 30801])
            ("rcirc-insert-next-input" function nil nil [30803 31059])
            ("rcirc-server-commands" variable (:default-value (quote ("/admin" "/away" "/connect" "/die" "/error" "/info" "/invite" "/ison" "/join" "/kick" "/kill" "/links" "/list" "/lusers" "/mode" "/motd" "/names" "/nick" "/notice" "/oper" "/part" "/pass" "/ping" "/pong" "/privmsg" "/quit" "/rehash" "/restart" "/service" "/servlist" "/server" "/squery" "/squit" "/stats" "/summon" "/time" "/topic" "/trace" "/user" "/userhost" "/users" "/version" "/wallops" "/who" "/whois" "/whowas"))) nil [31061 31700])
            ("rcirc-client-commands" variable (:default-value (quote ("/me" "/ctcp"))) nil [31761 31925])
            ("rcirc-completion-at-point" function nil nil [31927 32767])
            ("rcirc-completions" variable nil nil [32769 32799])
            ("rcirc-completion-start" variable nil nil [32800 32835])
            ("rcirc-complete" function (:user-visible-flag t) nil [32837 33904])
            ("set-rcirc-decode-coding-system" function
               (:user-visible-flag t
                :arguments ("coding-system"))
                nil [33906 34128])
            ("set-rcirc-encode-coding-system" function
               (:user-visible-flag t
                :arguments ("coding-system"))
                nil [34130 34352])
            ("rcirc-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "RET") (quote rcirc-send-input)) (define-key map (kbd "M-p") (quote rcirc-insert-prev-input)) (define-key map (kbd "M-n") (quote rcirc-insert-next-input)) (define-key map (kbd "TAB") (quote rcirc-complete)) (define-key map (kbd "C-c C-b") (quote rcirc-browse-url)) (define-key map (kbd "C-c C-c") (quote rcirc-edit-multiline)) (define-key map (kbd "C-c C-j") (quote rcirc-cmd-join)) (define-key map (kbd "C-c C-k") (quote rcirc-cmd-kick)) (define-key map (kbd "C-c C-l") (quote rcirc-toggle-low-priority)) (define-key map (kbd "C-c C-d") (quote rcirc-cmd-mode)) (define-key map (kbd "C-c C-m") (quote rcirc-cmd-msg)) (define-key map (kbd "C-c C-r") (quote rcirc-cmd-nick)) (define-key map (kbd "C-c C-o") (quote rcirc-omit-mode)) (define-key map (kbd "C-c C-p") (quote rcirc-cmd-part)) (define-key map (kbd "C-c C-q") (quote rcirc-cmd-query)) (define-key map (kbd "C-c C-t") (quote rcirc-cmd-topic)) (define-key map (kbd "C-c C-n") (quote rcirc-cmd-names)) (define-key map (kbd "C-c C-w") (quote rcirc-cmd-whois)) (define-key map (kbd "C-c C-x") (quote rcirc-cmd-quit)) (define-key map (kbd "C-c TAB") (quote rcirc-toggle-ignore-buffer-activity)) (define-key map (kbd "C-c C-s") (quote rcirc-switch-to-server-buffer)) (define-key map (kbd "C-c C-a") (quote rcirc-jump-to-first-unread-line)) map)) nil [34354 35716])
            ("rcirc-short-buffer-name" variable nil nil [35718 35817])
            ("rcirc-mode-hook" variable nil nil [35819 35890])
            ("rcirc-last-post-time" variable nil nil [35892 35925])
            ("rcirc-log-alist" variable nil nil [35927 36066])
            ("rcirc-current-line" variable nil nil [36068 36223])
            ("rcirc-mode" function (:arguments ("process" "target")) nil [36225 38901])
            ("rcirc-update-prompt" function (:arguments ("all")) nil [38903 40132])
            ("rcirc-set-changed" function (:arguments ("option" "value")) nil [40134 40376])
            ("rcirc-channel-p" function (:arguments ("target")) nil [40378 40575])
            ("rcirc-log-directory" variable (:default-value "~/.emacs.d/rcirc-log") nil [40577 40702])
            ("rcirc-log-flag" variable nil nil [40704 40855])
            ("rcirc-kill-buffer-hook" function nil nil [40857 41427])
            ("rcirc-change-major-mode-hook" function nil nil [41429 41566])
            ("rcirc-clean-up-buffer" function (:arguments ("reason")) nil [41568 42223])
            ("rcirc-generate-new-buffer-name" function (:arguments ("process" "target")) nil [42225 42528])
            ("rcirc-get-buffer" function (:arguments ("process" "target" "server")) nil [42530 42976])
            ("rcirc-get-buffer-create" function (:arguments ("process" "target")) nil [42978 43668])
            ("rcirc-send-input" function (:user-visible-flag t) nil [43670 44760])
            ("rcirc-fill-paragraph" function (:arguments ("justify")) nil [44762 45059])
            ("rcirc-process-input-line" function (:arguments ("line")) nil [45061 45282])
            ("rcirc-process-message" function (:arguments ("line")) nil [45284 45552])
            ("rcirc-process-command" function (:arguments ("command" "args" "line")) nil [45554 46307])
            ("rcirc-parent-buffer" variable nil nil [46309 46341])
            ("make-variable-buffer-local" code nil nil [46342 46391])
            ("put" code nil nil [46392 46437])
            ("rcirc-window-configuration" variable nil nil [46438 46477])
            ("rcirc-edit-multiline" function (:user-visible-flag t) nil [46478 47218])
            ("rcirc-multiline-minor-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "C-c C-c") (quote rcirc-multiline-minor-submit)) (define-key map (kbd "C-x C-s") (quote rcirc-multiline-minor-submit)) (define-key map (kbd "C-c C-k") (quote rcirc-multiline-minor-cancel)) (define-key map (kbd "ESC ESC ESC") (quote rcirc-multiline-minor-cancel)) map)) nil [47220 47616])
            ("define-minor-mode" code nil nil [47618 48031])
            ("rcirc-multiline-minor-submit" function (:user-visible-flag t) nil [48033 48511])
            ("rcirc-multiline-minor-cancel" function (:user-visible-flag t) nil [48513 48688])
            ("rcirc-any-buffer" function (:arguments ("process")) nil [48690 49093])
            ("rcirc-response-formats" variable (:default-value (quote (("PRIVMSG" . "<%N> %m") ("NOTICE" . "-%N- %m") ("ACTION" . "[%N %m]") ("COMMAND" . "%m") ("ERROR" . "%fw!!! %m") (t . "%fp*** %fs%n %r %m")))) nil [49095 50257])
            ("rcirc-omit-responses" variable (:default-value (quote ("JOIN" "PART" "QUIT" "NICK"))) nil [50259 50435])
            ("rcirc-format-response-string" function (:arguments ("process" "sender" "response" "target" "text")) nil [50437 52268])
            ("rcirc-target-buffer" function (:arguments ("process" "sender" "response" "target" "_text")) nil [52270 52891])
            ("rcirc-activity-types" variable nil nil [52893 52926])
            ("make-variable-buffer-local" code nil nil [52927 52977])
            ("rcirc-last-sender" variable nil nil [52978 53008])
            ("make-variable-buffer-local" code nil nil [53009 53056])
            ("rcirc-omit-threshold" variable (:default-value 100) nil [53058 53222])
            ("rcirc-log-process-buffers" variable nil nil [53224 53379])
            ("rcirc-last-quit-line" function (:arguments ("process" "nick" "target")) nil [53381 53693])
            ("rcirc-last-line" function (:arguments ("process" "nick" "target")) nil [53695 54069])
            ("rcirc-elapsed-lines" function (:arguments ("process" "nick" "target")) nil [54071 54373])
            ("rcirc-markup-text-functions" variable (:default-value (quote (rcirc-markup-attributes rcirc-markup-my-nick rcirc-markup-urls rcirc-markup-keywords rcirc-markup-bright-nicks))) nil [54375 54794])
            ("rcirc-print" function (:arguments ("process" "sender" "response" "target" "text" "activity")) nil [54796 59645])
            ("rcirc-generate-log-filename" function (:arguments ("process" "target")) nil [59647 59794])
            ("rcirc-log-filename-function" variable (:default-value (quote rcirc-generate-log-filename)) nil [59796 60439])
            ("rcirc-log" function (:arguments ("process" "sender" "response" "target" "text")) nil [60441 61030])
            ("rcirc-log-write" function nil nil [61032 61645])
            ("rcirc-view-log-file" function (:user-visible-flag t) nil [61647 61906])
            ("rcirc-join-channels" function (:arguments ("process" "channels")) nil [61908 62107])
            ("rcirc-nick-prefix-chars" variable (:default-value "~&@%+") nil [62130 62170])
            ("rcirc-user-nick" function (:arguments ("user")) nil [62171 62416])
            ("rcirc-nick-channels" function (:arguments ("process" "nick")) nil [62418 62607])
            ("rcirc-put-nick-channel" function (:arguments ("process" "nick" "channel" "line")) nil [62609 63170])
            ("rcirc-nick-remove" function (:arguments ("process" "nick")) nil [63172 63314])
            ("rcirc-remove-nick-channel" function (:arguments ("process" "nick" "channel")) nil [63316 63829])
            ("rcirc-channel-nicks" function (:arguments ("process" "target")) nil [63831 64402])
            ("rcirc-ignore-update-automatic" function (:arguments ("nick")) nil [64404 64738])
            ("rcirc-nickname<" function (:arguments ("s1" "s2")) nil [64741 65303])
            ("rcirc-sort-nicknames-join" function (:arguments ("input" "sep")) nil [65305 65626])
            ("rcirc-track-minor-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "C-c C-@") (quote rcirc-next-active-buffer)) (define-key map (kbd "C-c C-SPC") (quote rcirc-next-active-buffer)) map)) nil [65651 65898])
            ("define-minor-mode" code nil nil [65915 66827])
            ("or" code nil nil [66829 67001])
            ("or" code nil nil [67002 67154])
            ("or" code nil nil [67155 67289])
            ("rcirc-toggle-ignore-buffer-activity" function (:user-visible-flag t) nil [67291 67656])
            ("rcirc-toggle-low-priority" function (:user-visible-flag t) nil [67658 67994])
            ("rcirc-omit-mode" function (:user-visible-flag t) nil [67996 68632])
            ("rcirc-switch-to-server-buffer" function (:user-visible-flag t) nil [68634 68879])
            ("rcirc-jump-to-first-unread-line" function (:user-visible-flag t) nil [68881 69123])
            ("rcirc-bury-buffers" function (:user-visible-flag t) nil [69125 69374])
            ("rcirc-next-active-buffer" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [69405 70121])
            ("define-obsolete-variable-alias" code nil nil [70123 70212])
            ("rcirc-activity-functions" variable nil nil [70213 70468])
            ("rcirc-record-activity" function (:arguments ("buffer" "type")) nil [70470 71269])
            ("rcirc-clear-activity" function (:arguments ("buffer")) nil [71271 71461])
            ("rcirc-clear-unread" function (:arguments ("buffer")) nil [71463 71660])
            ("rcirc-split-activity" function (:arguments ("activity")) nil [71662 72016])
            ("rcirc-update-activity-string-hook" variable nil nil [72018 72118])
            ("rcirc-update-activity-string" function nil nil [72150 72686])
            ("rcirc-activity-string" function (:arguments ("buffers")) nil [72688 73070])
            ("rcirc-short-buffer-name" function (:arguments ("buffer")) nil [73072 73260])
            ("rcirc-visible-buffers" function nil nil [73262 73533])
            ("rcirc-visible-buffers" variable nil nil [73535 73569])
            ("rcirc-window-configuration-change" function nil nil [73570 73862])
            ("rcirc-window-configuration-change-1" function nil nil [73864 74747])
            ("rcirc-update-short-buffer-names" function nil nil [74780 75138])
            ("rcirc-abbreviate" function (:arguments ("pairs")) nil [75140 75244])
            ("rcirc-rebuild-tree" function (:arguments ("tree" "acc")) nil [75246 75565])
            ("rcirc-make-trees" function (:arguments ("pairs")) nil [75567 76404])
            ("defun-rcirc-command" function (:arguments ("command" "argument" "docstring" "interactive-form" "body")) nil [76585 77262])
            ("defun-rcirc-command" code nil nil [77264 77990])
            ("defun-rcirc-command" code nil nil [77992 78414])
            ("defun-rcirc-command" code nil nil [78416 79068])
            ("defun-rcirc-command" code nil nil [79070 79360])
            ("defun-rcirc-command" code nil nil [79435 79664])
            ("defun-rcirc-command" code nil nil [79666 79913])
            ("defun-rcirc-command" code nil nil [79915 80361])
            ("defun-rcirc-command" code nil nil [80363 80578])
            ("defun-rcirc-command" code nil nil [80580 81087])
            ("defun-rcirc-command" code nil nil [81089 81519])
            ("defun-rcirc-command" code nil nil [81521 81800])
            ("defun-rcirc-command" code nil nil [81802 82038])
            ("defun-rcirc-command" code nil nil [82040 82217])
            ("defun-rcirc-command" code nil nil [82219 82372])
            ("defun-rcirc-command" code nil nil [82374 82523])
            ("defun-rcirc-command" code nil nil [82525 83076])
            ("rcirc-cmd-ctcp" function (:arguments ("args" "process" "_target")) nil [83078 83643])
            ("rcirc-ctcp-sender-PING" function (:arguments ("process" "target" "_request")) nil [83645 83852])
            ("rcirc-cmd-me" function (:arguments ("args" "process" "target")) nil [83854 83955])
            ("rcirc-add-or-remove" function (:arguments ("set" "elements")) nil [83957 84171])
            ("defun-rcirc-command" code nil nil [84173 84774])
            ("defun-rcirc-command" code nil nil [84776 85098])
            ("defun-rcirc-command" code nil nil [85100 85406])
            ("defun-rcirc-command" code nil nil [85408 85827])
            ("rcirc-add-face" function (:arguments ("start" "end" "name" "object")) nil [85831 86351])
            ("rcirc-facify" function (:arguments ("string" "face")) nil [86353 86537])
            ("rcirc-url-regexp" variable (:default-value (concat "\\b\\(\\(www\\.\\|\\(s?https?\\|ftp\\|file\\|gopher\\|" "nntp\\|news\\|telnet\\|wais\\|mailto\\|info\\):\\)" "\\(//[-a-z0-9_.]+:[0-9]*\\)?" (if (string-match "[[:digit:]]" "1") (let ((chars "-a-z0-9_=#$@~%&*+\\/[:word:]") (punct "!?:;.,")) (concat "\\(?:" "[" chars punct "]+" "(" "[" chars punct "]+" "[" chars "]*)" "[" chars "]" "\\|" "[" chars punct "]+" "[" chars "]" "\\)")) (concat "\\([-a-z0-9_=!?#$@~%&*+\\/:;.,]\\|\\w\\)+" "\\([-a-z0-9_=#$@~%&*+\\/]\\|\\w\\)")) "\\)")) nil [86539 87304])
            ("rcirc-condition-filter" function (:arguments ("condp" "lst")) nil [87329 87636])
            ("rcirc-browse-url" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [87638 88255])
            ("rcirc-markup-timestamp" function (:arguments ("_sender" "_response")) nil [88258 88419])
            ("rcirc-markup-attributes" function (:arguments ("_sender" "_response")) nil [88421 89148])
            ("rcirc-markup-my-nick" function (:arguments ("_sender" "response")) nil [89150 89649])
            ("rcirc-markup-urls" function (:arguments ("_sender" "_response")) nil [89651 90354])
            ("rcirc-markup-keywords" function (:arguments ("sender" "response")) nil [90356 90918])
            ("rcirc-markup-bright-nicks" function (:arguments ("_sender" "response")) nil [90920 91240])
            ("rcirc-markup-fill" function (:arguments ("_sender" "response")) nil [91242 91745])
            ("rcirc-handler-001" function (:arguments ("process" "sender" "args" "text")) nil [91978 93007])
            ("rcirc-join-channels-post-auth" function (:arguments ("process")) nil [93009 93207])
            ("rcirc-handler-PRIVMSG" function (:arguments ("process" "sender" "args" "text")) nil [93209 93819])
            ("rcirc-handler-NOTICE" function (:arguments ("process" "sender" "args" "text")) nil [93821 94487])
            ("rcirc-check-auth-status" function (:arguments ("process" "sender" "args" "_text")) nil [94489 95764])
            ("rcirc-handler-WALLOPS" function (:arguments ("process" "sender" "args" "_text")) nil [95766 95884])
            ("rcirc-handler-JOIN" function (:arguments ("process" "sender" "args" "_text")) nil [95886 96785])
            ("rcirc-handler-PART-or-KICK" function (:arguments ("process" "_response" "channel" "_sender" "nick" "_args")) nil [96829 97463])
            ("rcirc-handler-PART" function (:arguments ("process" "sender" "args" "_text")) nil [97465 97914])
            ("rcirc-handler-KICK" function (:arguments ("process" "sender" "args" "_text")) nil [97916 98392])
            ("rcirc-maybe-remember-nick-quit" function (:arguments ("process" "nick" "channel")) nil [98394 99026])
            ("rcirc-handler-QUIT" function (:arguments ("process" "sender" "args" "_text")) nil [99028 99450])
            ("rcirc-handler-NICK" function (:arguments ("process" "sender" "args" "_text")) nil [99452 100765])
            ("rcirc-handler-PING" function (:arguments ("process" "_sender" "args" "_text")) nil [100767 100881])
            ("rcirc-handler-PONG" function (:arguments ("_process" "_sender" "_args" "_text")) nil [100883 100959])
            ("rcirc-handler-TOPIC" function (:arguments ("process" "sender" "args" "_text")) nil [100961 101199])
            ("rcirc-nick-away-alist" variable nil nil [101201 101235])
            ("rcirc-handler-301" function (:arguments ("process" "_sender" "args" "text")) nil [101236 101719])
            ("rcirc-handler-317" function (:arguments ("process" "sender" "args" "_text")) nil [101721 102350])
            ("rcirc-handler-332" function (:arguments ("process" "_sender" "args" "_text")) nil [102352 102611])
            ("rcirc-handler-333" function (:arguments ("process" "sender" "args" "_text")) nil [102613 103120])
            ("rcirc-handler-477" function (:arguments ("process" "sender" "args" "_text")) nil [103122 103257])
            ("rcirc-handler-MODE" function (:arguments ("process" "sender" "args" "_text")) nil [103259 103756])
            ("rcirc-get-temp-buffer-create" function (:arguments ("process" "channel")) nil [103758 103973])
            ("rcirc-handler-353" function (:arguments ("process" "_sender" "args" "_text")) nil [103975 104486])
            ("rcirc-handler-366" function (:arguments ("process" "sender" "args" "_text")) nil [104488 104894])
            ("rcirc-handler-433" function (:arguments ("process" "sender" "args" "text")) nil [104896 105158])
            ("rcirc-authenticate" function (:user-visible-flag t) nil [105160 106669])
            ("rcirc-handler-INVITE" function (:arguments ("process" "sender" "args" "_text")) nil [106671 106804])
            ("rcirc-handler-ERROR" function (:arguments ("process" "sender" "args" "_text")) nil [106806 106935])
            ("rcirc-handler-CTCP" function (:arguments ("process" "target" "sender" "text")) nil [106937 107623])
            ("rcirc-handler-ctcp-VERSION" function (:arguments ("process" "_target" "sender" "_args")) nil [107625 107865])
            ("rcirc-handler-ctcp-ACTION" function (:arguments ("process" "target" "sender" "args")) nil [107867 107983])
            ("rcirc-handler-ctcp-TIME" function (:arguments ("process" "_target" "sender" "_args")) nil [107985 108196])
            ("rcirc-handler-CTCP-response" function (:arguments ("process" "_target" "sender" "message")) nil [108198 108318])
            ("rcirc-faces" customgroup (:user-visible-flag t) nil [108321 108400])
            ("rcirc-my-nick" variable
               (:default-value (quote ((((class color) (min-colors 88) (background light)) :foreground "Blue1") (((class color) (min-colors 88) (background dark)) :foreground "LightSkyBlue") (((class color) (min-colors 16) (background light)) :foreground "Blue") (((class color) (min-colors 16) (background dark)) :foreground "LightSkyBlue") (((class color) (min-colors 8)) :foreground "blue" :weight bold) (t :inverse-video t :weight bold)))
                :type "face")
                nil [108402 108941])
            ("rcirc-other-nick" variable
               (:default-value (quote ((((class grayscale) (background light)) :foreground "Gray90" :weight bold :slant italic) (((class grayscale) (background dark)) :foreground "DimGray" :weight bold :slant italic) (((class color) (min-colors 88) (background light)) :foreground "DarkGoldenrod") (((class color) (min-colors 88) (background dark)) :foreground "LightGoldenrod") (((class color) (min-colors 16) (background light)) :foreground "DarkGoldenrod") (((class color) (min-colors 16) (background dark)) :foreground "LightGoldenrod") (((class color) (min-colors 8)) :foreground "yellow" :weight light) (t :weight bold :slant italic)))
                :type "face")
                nil [108943 109715])
            ("rcirc-bright-nick" variable
               (:default-value (quote ((((class grayscale) (background light)) :foreground "LightGray" :weight bold :underline t) (((class grayscale) (background dark)) :foreground "Gray50" :weight bold :underline t) (((class color) (min-colors 88) (background light)) :foreground "CadetBlue") (((class color) (min-colors 88) (background dark)) :foreground "Aquamarine") (((class color) (min-colors 16) (background light)) :foreground "CadetBlue") (((class color) (min-colors 16) (background dark)) :foreground "Aquamarine") (((class color) (min-colors 8)) :foreground "magenta") (t :weight bold :underline t)))
                :type "face")
                nil [109717 110440])
            ("rcirc-dim-nick" variable
               (:default-value (quote ((t :inherit default)))
                :type "face")
                nil [110442 110561])
            ("rcirc-server" variable
               (:default-value (quote ((((class grayscale) (background light)) :foreground "DimGray" :weight bold :slant italic) (((class grayscale) (background dark)) :foreground "LightGray" :weight bold :slant italic) (((class color) (min-colors 88) (background light)) :foreground "Firebrick") (((class color) (min-colors 88) (background dark)) :foreground "chocolate1") (((class color) (min-colors 16) (background light)) :foreground "red") (((class color) (min-colors 16) (background dark)) :foreground "red1") (((class color) (min-colors 8) (background light))) (((class color) (min-colors 8) (background dark))) (t :weight bold :slant italic)))
                :type "face")
                nil [110563 111348])
            ("rcirc-server-prefix" variable
               (:default-value (quote ((default :inherit rcirc-server) (((class grayscale))) (((class color) (min-colors 16))) (((class color) (min-colors 8) (background light)) :foreground "red") (((class color) (min-colors 8) (background dark)) :foreground "red1")))
                :type "face")
                nil [111350 111732])
            ("rcirc-timestamp" variable
               (:default-value (quote ((t :inherit default)))
                :type "face")
                nil [111734 111838])
            ("rcirc-nick-in-message" variable
               (:default-value (quote ((((class grayscale) (background light)) :foreground "LightGray" :weight bold) (((class grayscale) (background dark)) :foreground "DimGray" :weight bold) (((class color) (min-colors 88) (background light)) :foreground "Purple") (((class color) (min-colors 88) (background dark)) :foreground "Cyan1") (((class color) (min-colors 16) (background light)) :foreground "Purple") (((class color) (min-colors 16) (background dark)) :foreground "Cyan") (((class color) (min-colors 8)) :foreground "cyan" :weight bold) (t :weight bold)))
                :type "face")
                nil [111840 112539])
            ("rcirc-nick-in-message-full-line" variable
               (:default-value (quote ((t :weight bold)))
                :type "face")
                nil [112541 112703])
            ("rcirc-prompt" variable
               (:default-value (quote ((((min-colors 88) (background dark)) :foreground "cyan1") (((background dark)) :foreground "cyan") (t :foreground "dark blue")))
                :type "face")
                nil [112705 112945])
            ("rcirc-track-nick" variable
               (:default-value (quote ((((type tty)) :inherit default) (t :inverse-video t)))
                :type "face")
                nil [112947 113123])
            ("rcirc-track-keyword" variable
               (:default-value (quote ((t :weight bold)))
                :type "face")
                nil [113125 113262])
            ("rcirc-url" variable
               (:default-value (quote ((t :weight bold)))
                :type "face")
                nil [113264 113364])
            ("rcirc-keyword" variable
               (:default-value (quote ((t :inherit highlight)))
                :type "face")
                nil [113366 113480])
            ("put" code nil nil [113551 113617])
            ("rcirc-looking-at-input" function nil nil [113618 113742])
            ("rcirc" package nil nil [113746 113762]))          
      :file "rcirc.el.gz"
      :pointmax 113787
      :fsize 28637
      :lastmodtime '(22768 58519 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("comint" include nil nil [1612 1629])
            ("shell" include nil nil [1630 1646])
            ("rlogin" customgroup (:user-visible-flag t) nil [1648 1732])
            ("rlogin-program" variable (:default-value "ssh") nil [1734 1899])
            ("rlogin-explicit-args" variable (:default-value (quote ("-t" "-t"))) nil [1901 2132])
            ("rlogin-mode-hook" variable nil nil [2134 2259])
            ("rlogin-process-connection-type" variable (:default-value (and (string-match "rlogin" rlogin-program) (string-match-p "-solaris2" system-configuration) t)) nil [2261 2961])
            ("rlogin-directory-tracking-mode" variable (:default-value (quote local)) nil [2963 3790])
            ("make-variable-buffer-local" code nil nil [3792 3852])
            ("rlogin-host" variable nil nil [3854 4008])
            ("rlogin-remote-user" variable nil nil [4010 4314])
            ("rlogin-mode-map" variable (:default-value (let ((map (if (consp shell-mode-map) (cons (quote keymap) shell-mode-map) (copy-keymap shell-mode-map)))) (define-key map "" (quote rlogin-send-Ctrl-C)) (define-key map "" (quote rlogin-send-Ctrl-D)) (define-key map "" (quote rlogin-send-Ctrl-Z)) (define-key map "" (quote rlogin-send-Ctrl-backslash)) (define-key map "" (quote rlogin-delchar-or-send-Ctrl-D)) (define-key map "	" (quote rlogin-tab-or-complete)) map)) nil [4316 4841])
            ("rlogin-history" variable nil nil [4846 4873])
            ("rlogin" function
               (:user-visible-flag t
                :arguments ("input-args" "buffer"))
                nil [4890 9011])
            ("put" code nil nil [9013 9052])
            ("define-derived-mode" code nil nil [9054 9212])
            ("rlogin-directory-tracking-mode" function
               (:user-visible-flag t
                :arguments ("prefix"))
                nil [9214 11068])
            ("rlogin-send-Ctrl-C" function nil nil [11072 11152])
            ("rlogin-send-Ctrl-D" function nil nil [11154 11234])
            ("rlogin-send-Ctrl-Z" function nil nil [11236 11316])
            ("rlogin-send-Ctrl-backslash" function nil nil [11318 11407])
            ("rlogin-delchar-or-send-Ctrl-D" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [11409 11616])
            ("rlogin-tab-or-complete" function (:user-visible-flag t) nil [11618 11825])
            ("rlogin" package nil nil [11827 11844]))          
      :file "rlogin.el.gz"
      :pointmax 11870
      :fsize 4072
      :lastmodtime '(22768 58519 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("net-utils--executable-find-sbin" function (:arguments ("command")) nil [1691 1900])
            ("net-utils" customgroup (:user-visible-flag t) nil [2052 2163])
            ("traceroute-program" variable (:default-value (if (eq system-type (quote windows-nt)) "tracert" "traceroute")) nil [2165 2353])
            ("traceroute-program-options" variable nil nil [2355 2483])
            ("ping-program" variable (:default-value "ping") nil [2485 2605])
            ("ping-program-options" variable (:default-value (and (memq system-type (quote (gnu/linux irix))) (list "-c" "4"))) nil [2719 2969])
            ("define-obsolete-variable-alias" code nil nil [2971 3046])
            ("ifconfig-program" variable (:default-value (cond ((eq system-type (quote windows-nt)) "ipconfig") ((executable-find "ifconfig") "ifconfig") ((net-utils--executable-find-sbin "ifconfig")) ((net-utils--executable-find-sbin "ip")) (t "ip"))) nil [3048 3440])
            ("define-obsolete-variable-alias" code nil nil [3442 3535])
            ("ifconfig-program-options" variable (:default-value (cond ((string-match "ipconfig\\'" ifconfig-program) (quote ("/all"))) ((string-match "ifconfig\\'" ifconfig-program) (quote ("-a"))) ((string-match "ip\\'" ifconfig-program) (quote ("addr"))))) nil [3537 3899])
            ("iwconfig-program" variable (:default-value "iwconfig") nil [3901 4059])
            ("iwconfig-program-options" variable nil nil [4061 4198])
            ("netstat-program" variable (:default-value "netstat") nil [4200 4315])
            ("netstat-program-options" variable (:default-value (list "-a")) nil [4317 4449])
            ("arp-program" variable (:default-value (or (net-utils--executable-find-sbin "arp") "arp")) nil [4451 4617])
            ("arp-program-options" variable (:default-value (list "-a")) nil [4619 4743])
            ("route-program" variable (:default-value (if (eq system-type (quote windows-nt)) "route" "netstat")) nil [4745 4908])
            ("route-program-options" variable (:default-value (if (eq system-type (quote windows-nt)) (list "print") (list "-r"))) nil [4910 5097])
            ("nslookup-program" variable (:default-value "nslookup") nil [5099 5227])
            ("nslookup-program-options" variable nil nil [5229 5353])
            ("nslookup-prompt-regexp" variable (:default-value "^> ") nil [5355 5556])
            ("dig-program" variable (:default-value "dig") nil [5558 5662])
            ("ftp-program" variable (:default-value "ftp") nil [5664 5770])
            ("ftp-program-options" variable nil nil [5772 5886])
            ("ftp-prompt-regexp" variable (:default-value "^ftp>") nil [5888 6096])
            ("smbclient-program" variable (:default-value "smbclient") nil [6098 6199])
            ("smbclient-program-options" variable nil nil [6201 6327])
            ("smbclient-prompt-regexp" variable (:default-value "^smb: >") nil [6329 6551])
            ("dns-lookup-program" variable (:default-value "host") nil [6553 6679])
            ("dns-lookup-program-options" variable nil nil [6681 6809])
            ("network-connection-service" variable nil nil [6833 6872])
            ("network-connection-host" variable nil nil [6873 6912])
            ("nslookup-font-lock-keywords" variable (:default-value (list (list "^[A-Za-z0-9 _]+:" 0 (quote font-lock-type-face)) (list "\\<\\(SOA\\|NS\\|MX\\|A\\|CNAME\\)\\>" 1 (quote font-lock-keyword-face)) (list (mapconcat (quote identity) (make-list 4 "[0-9]+") "\\.") 0 (quote font-lock-variable-name-face)) (list (let ((host-expression "[-A-Za-z0-9]+")) (concat (mapconcat (quote identity) (make-list 2 host-expression) "\\.") "\\(\\." host-expression "\\)*")) 0 (quote font-lock-variable-name-face)))) nil [7057 7696])
            ("net-utils-font-lock-keywords" variable (:default-value (list (list (mapconcat (quote identity) (make-list 4 "[0-9]+") "\\.") 0 (quote font-lock-variable-name-face)) (list (concat "\\( \\([[:xdigit:]]+\\(:\\|::\\)\\)+[[:xdigit:]]+\\)" "\\|" "\\(::[[:xdigit:]]+\\)") 0 (quote font-lock-variable-name-face)) (list (let ((host-expression "[-A-Za-z0-9]+")) (concat (mapconcat (quote identity) (make-list 2 host-expression) "\\.") "\\(\\." host-expression "\\)*")) 0 (quote font-lock-variable-name-face)))) nil [7855 8489])
            ("define-derived-mode" code nil nil [8491 8777])
            ("net-utils-machine-at-point" function nil nil [9041 9333])
            ("net-utils-url-at-point" function nil nil [9335 9688])
            ("net-utils-remove-ctrl-m-filter" function (:arguments ("process" "output-string")) nil [9690 10261])
            ("declare-function" code nil nil [10263 10328])
            ("net-utils-run-program" function (:arguments ("name" "header" "program" "args")) nil [10330 11037])
            ("net-utils--revert-cmd" variable nil nil [11253 11287])
            ("net-utils-run-simple" function (:arguments ("buffer" "program-name" "args" "nodisplay")) nil [11289 12446])
            ("net-utils--revert-function" function (:arguments ("ignore-auto" "noconfirm")) nil [12448 12885])
            ("ifconfig" function (:user-visible-flag t) nil [12902 13094])
            ("defalias" code nil nil [13096 13126])
            ("iwconfig" function (:user-visible-flag t) nil [13143 13335])
            ("netstat" function (:user-visible-flag t) nil [13352 13539])
            ("arp" function (:user-visible-flag t) nil [13556 13723])
            ("route" function (:user-visible-flag t) nil [13740 13917])
            ("traceroute" function
               (:user-visible-flag t
                :arguments ("target"))
                nil [14099 14423])
            ("ping" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [14440 14915])
            ("nslookup-host" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [15196 15657])
            ("nslookup" function (:user-visible-flag t) nil [15674 15816])
            ("comint-prompt-regexp" variable nil nil [15818 15847])
            ("comint-input-autoexpand" variable nil nil [15848 15880])
            ("comint-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [15882 15920])
            ("nslookup-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote completion-at-point)) map)) nil [15922 16040])
            ("define-derived-mode" code nil nil [16096 16389])
            ("dns-lookup-host" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [16406 16922])
            ("ffap-string-at-point" function (:prototype-flag t) nil [16924 16963])
            ("run-dig" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [16980 17320])
            ("comint-exec" function (:prototype-flag t) nil [17322 17354])
            ("ftp" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [17426 17844])
            ("ftp-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote completion-at-point)) map)) nil [17846 17986])
            ("define-derived-mode" code nil nil [17988 18727])
            ("smbclient" function
               (:user-visible-flag t
                :arguments ("host" "service"))
                nil [18729 19349])
            ("smbclient-list-shares" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [19351 19746])
            ("define-derived-mode" code nil nil [19748 20511])
            ("network-connection-service-alist" variable (:default-value (list (cons (quote echo) 7) (cons (quote active-users) 11) (cons (quote daytime) 13) (cons (quote chargen) 19) (cons (quote ftp) 21) (cons (quote telnet) 23) (cons (quote smtp) 25) (cons (quote time) 37) (cons (quote whois) 43) (cons (quote gopher) 70) (cons (quote finger) 79) (cons (quote www) 80) (cons (quote pop2) 109) (cons (quote pop3) 110) (cons (quote sun-rpc) 111) (cons (quote nntp) 119) (cons (quote ntp) 123) (cons (quote netbios-name) 137) (cons (quote netbios-data) 139) (cons (quote irc) 194) (cons (quote https) 443) (cons (quote rlogin) 513))) nil [20738 21413])
            ("run-network-program" function (:arguments ("process-name" "host" "port" "initial-string")) nil [21436 22053])
            ("finger-X.500-host-regexps" variable nil nil [22198 22551])
            ("finger" function
               (:user-visible-flag t
                :arguments ("user" "host"))
                nil [22587 23674])
            ("whois-server-name" variable (:default-value "rs.internic.net") nil [23676 23805])
            ("whois-server-list" variable (:default-value (quote (("whois.arin.net") ("rs.internic.net") ("whois.publicinterestregistry.net") ("whois.abuse.net") ("whois.apnic.net") ("nic.ddn.mil") ("whois.nic.mil") ("whois.nic.gov") ("whois.ripe.net")))) nil [23807 24235])
            ("whois-server-tld" variable (:default-value (quote (("rs.internic.net" . "com") ("whois.publicinterestregistry.net" . "org") ("whois.ripe.net" . "be") ("whois.ripe.net" . "de") ("whois.ripe.net" . "dk") ("whois.ripe.net" . "it") ("whois.ripe.net" . "fi") ("whois.ripe.net" . "fr") ("whois.ripe.net" . "uk") ("whois.apnic.net" . "au") ("whois.apnic.net" . "ch") ("whois.apnic.net" . "hk") ("whois.apnic.net" . "jp") ("whois.nic.gov" . "gov") ("whois.nic.mil" . "mil")))) nil [24412 25028])
            ("whois-guess-server" variable (:default-value t) nil [25030 25296])
            ("whois-get-tld" function (:arguments ("host")) nil [25298 25614])
            ("whois" function
               (:user-visible-flag t
                :arguments ("arg" "search-string"))
                nil [25649 26410])
            ("whois-reverse-lookup-server" variable (:default-value "whois.arin.net") nil [26412 26552])
            ("whois-reverse-lookup" function nil nil [26569 26706])
            ("define-derived-mode" code nil nil [26916 27064])
            ("network-connection-mode-setup" function (:arguments ("host" "service")) nil [27066 27301])
            ("network-connection-to-service" function
               (:user-visible-flag t
                :arguments ("host" "service"))
                nil [27318 27778])
            ("network-connection" function
               (:user-visible-flag t
                :arguments ("host" "port"))
                nil [27795 27975])
            ("network-service-connection" function (:arguments ("host" "service")) nil [27977 28485])
            ("comint-input-ring" variable nil nil [28487 28513])
            ("network-connection-reconnect" function (:user-visible-flag t) nil [28515 29218])
            ("net-utils" package nil nil [29220 29240]))          
      :file "net-utils.el.gz"
      :pointmax 29269
      :fsize 7493
      :lastmodtime '(22768 58519 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("comint" include nil nil [2114 2131])
            ("telnet-host-properties" variable nil nil [2133 2470])
            ("telnet-new-line" variable (:default-value "") nil [2472 2501])
            ("telnet-mode-map" variable (:default-value (let ((map (nconc (make-sparse-keymap) comint-mode-map))) (define-key map "" (quote telnet-send-input)) (define-key map "" (quote send-process-next-char)) (define-key map "" (quote telnet-interrupt-subjob)) (define-key map "" (quote telnet-c-z)) map)) nil [2502 2849])
            ("telnet-prompt-pattern" variable (:default-value "^[^#$%>
]*[#$%>] *") nil [2851 2903])
            ("telnet-replace-c-g" variable nil nil [2904 2935])
            ("make-variable-buffer-local" code nil nil [2936 3046])
            ("make-variable-buffer-local" code nil nil [3047 3138])
            ("telnet-count" variable nil nil [3140 3240])
            ("make-variable-buffer-local" code nil nil [3241 3283])
            ("telnet-program" variable (:default-value "telnet") nil [3285 3365])
            ("telnet-initial-count" variable (:default-value -50) nil [3367 3550])
            ("telnet-maximum-count" variable (:default-value 4) nil [3552 3823])
            ("telnet-interrupt-subjob" function (:user-visible-flag t) nil [3825 3996])
            ("telnet-c-z" function nil nil [3998 4070])
            ("send-process-next-char" function nil nil [4072 4333])
            ("telnet-check-software-type-initialize" function (:arguments ("string")) nil [4387 4991])
            ("telnet-initial-filter" function (:arguments ("proc" "string")) nil [4993 5845])
            ("telnet-simple-send" function (:arguments ("proc" "string")) nil [5940 6163])
            ("telnet-filter" function (:arguments ("proc" "string")) nil [6165 7211])
            ("telnet-send-input" function nil nil [7213 7442])
            ("telnet" function
               (:user-visible-flag t
                :arguments ("host" "port"))
                nil [7459 9495])
            ("put" code nil nil [9497 9536])
            ("define-derived-mode" code nil nil [9538 10087])
            ("rsh" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [10104 10604])
            ("telnet" package nil nil [10606 10623]))          
      :file "telnet.el.gz"
      :pointmax 10649
      :fsize 3775
      :lastmodtime '(22768 58519 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1941 1954])
            ("rfc2104-ipad" variable
               (:constant-flag t
                :default-value 54)
                nil [2016 2045])
            ("rfc2104-opad" variable
               (:constant-flag t
                :default-value 92)
                nil [2106 2135])
            ("rfc2104-nybbles" variable
               (:constant-flag t
                :default-value (let ((v (make-vector (1+ (max 48 57 97 102 65 70)) nil)) (ls (quote ((48 . 0) (97 . 10) (65 . 10) (49 . 1) (98 . 11) (66 . 11) (50 . 2) (99 . 12) (67 . 12) (51 . 3) (100 . 13) (68 . 13) (52 . 4) (101 . 14) (69 . 14) (53 . 5) (102 . 15) (70 . 15) (54 . 6) (55 . 7) (56 . 8) (57 . 9))))) (while ls (aset v (caar ls) (cdar ls)) (setq ls (cdr ls))) v))
                nil [2137 2818])
            ("rfc2104-string-make-unibyte" function (:arguments ("string")) nil [2841 3038])
            ("rfc2104-hash" function (:arguments ("hash" "block-length" "hash-length" "key" "text")) nil [3041 4094])
            ("rfc2104" package nil nil [4096 4114]))          
      :file "rfc2104.el.gz"
      :pointmax 4141
      :fsize 1859
      :lastmodtime '(22768 58519 0 0)
      :unmatched-syntax '((close-paren 3038 . 3039) (symbol 2821 . 2838) (open-paren 2820 . 2821) (close-paren 1954 . 1955) (symbol 1923 . 1940) (open-paren 1922 . 1923))))
  :file "!usr!share!emacs!25.3!lisp!net!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
